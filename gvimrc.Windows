" somini.gvimrc - Windows

" Workarounds {{{
set winaltkeys=no
" This does close the current window on Windows. I think
nnoremap <C-w><C-c> <C-c>
" }}}

" Clipboard {{{
set clipboard=unnamed " This works as expected
"}}}

" Appearance {{{
" Important to remove the `:cANSI` nonsense set by default
set guifont=DejaVu_Sans_Mono_for_Powerline:h11,Consolas:h11
"}}}

" Windowing Systems {{{
" If $HOME was non-ASCII characters, copy the DLL into the $VIMRUNTIME folder
let s:search_list = [g:os_dir, $VIMRUNTIME]
if exists('g:os_dir_extra')
	call insert(s:search_list, g:os_dir_extra,0)
endif
let s:search_path = join(s:search_list, ',')
let s:dll_maximize   = findfile('maximize.dll', s:search_path)
let s:dll_fullscreen = findfile('gvimfullscreen.dll', s:search_path)

function! ToggleFullscreen()
	if filereadable(s:dll_fullscreen)
		try
			call libcallnr(s:dll_fullscreen, 'ToggleFullScreen', 0)
		catch
			echom 'Error in the Fullscreen DLL'
		endtry
	endif
endfunction
function! WindowMaximize()
	if filereadable(s:dll_maximize)
		try
			call libcallnr(s:dll_maximize, 'Maximize', 1)
		catch
			call s:WindowMaximizeHack()
		endtry
	else
		call s:WindowMaximizeHack()
	endif
endfunction
function! s:WindowMaximizeHack()
	if g:os == 'Windows'
		simalt ~x
	else
		" Fallback to the good old hack
		set lines=999 columns=999
	endif
endfunction

" Maximize the gVim window on entering
call WindowMaximize()
" Create a <Plug> mapping to maximize windows
nnoremap <Plug>ToggleFullscreen :<C-u>call ToggleFullscreen()<CR>
"}}}

" Modeline {{{
" vim:ft=vim:ts=2:sw=2:fdm=marker
"}}}
