" somini.vimrc - Windows

" Data Safety and Managing {{{
let s:user_temp = $TEMP
let s:user_cache = s:user_temp.'/vim'
call CheckDir(s:user_cache)

" Vim Info {{{
let s:viminfo_old = $HOME.'/_viminfo'
if filereadable(s:viminfo_old)
	rviminfo "Read the old viminfo file
	"TODO: Delete old file
endif
let s:viminfo_new = s:user_cache.'/viminfo'
let &viminfo = &viminfo.',r'.s:user_temp
let &viminfo = &viminfo.',n'.s:viminfo_new
if filereadable(s:viminfo_new) "Make sure it's there
	rviminfo "This runs after the viminfo is read, so just read it again
endif
wviminfo! "Merge both files
"}}}
" Undo {{{
let &undodir = s:user_cache.'/undo'
call CheckDir(&undodir)
" }}}
" Views {{{
let &viewdir = s:user_cache.'/views'
call CheckDir(&viewdir)
"}}}
" Swap Files {{{
let s:swap_dir = s:user_cache.'/swap'
call CheckDir(s:swap_dir)
let &directory = s:swap_dir.'//,'.s:user_temp.'//'.',.'
" }}}
" Backup Files {{{
let s:backup_dir = s:user_cache.'/backup'
" Same as swap, only on a different folder
let &backupdir = s:backup_dir.','.s:user_temp.'//'.',.'
let &backupskip = &backupskip.','.s:user_temp.'/*'
" }}}
let g:NERDTreeBookmarksFile = s:user_cache.'/NERDTree_Bookmarks'
" }}}

" Plugin Configuration {{{
" CtrlP {{{
let s:ctrlp_cache = s:user_cache.'/plugin/ctrlp'
call CheckDir(s:ctrlp_cache)
let g:ctrlp_cache_dir = s:ctrlp_cache
" Abbreviations {{{
let g:ctrlp_abbrev['abbrevs'] += [
	\ {
	\ 'pattern': '^@h',
	\ 'expanded': '@cd $HOMEDRIVE$HOMEPATH',
	\ 'mode': 'pfrz',
	\ },
	\ {
	\ 'pattern': '^@r',
	\ 'expanded': '@cd $HOMEDRIVE',
	\ 'mode': 'pfrz',
	\ },
\ ]
"}}}
"}}}
" EasyClip {{{
let g:EasyClipShareYanksDirectory = s:user_cache
"}}}
"}}}

" Workarounds {{{
autocmd VimEnter * let $HOME = $HOMEDRIVE.$HOMEPATH " Make sure it's the correct path
" Caffeine.exe {{{
map  <F15> <NOP>
map! <F15> <NOP>
" }}}
" }}}

" Modeline {{{
" vim:ft=vim:ts=2:sw=2:fdm=marker
"}}}
